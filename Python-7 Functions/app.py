# დავალება 1.

# შექმენით გლობალური ცვლადი int_list = [10,20,30,40] და დაწერეთ პითონის ფუნქცია,
# რომელიც მიიღებს
# რიცხვს პარამეტრად და გლობალურ int_list სიაში ჩაამატებს პარამეტრად მიღებულ რიცხვს.


# int_list = [10, 20, 30, 40]


# def add_to_list(num):
#     int_list.append(num)
#     return int_list

# print(add_to_list(10))

# დავალება 2.

# შექმენით ფუნქცია, რომელიც ატრიბუტად იღებს წინადადებას, ფუნქციამ უნდა დააბრუნოს
#  წინადადებაში არსებული სიტყვებიდან ყველაზე დიდი.
# მინიშნება: შეგიძლიათ გამოიყენოთ სტრინგის მეთოდი split()


# დავალება 3.

# დაწერეთ პითონის ფუნქცია რომელიც პარამეტრად იღებს რიცხვების სიას (ლისტს) და აბრუნებს
# რიცხვების ჯამს.
# პარამეტრად უნდა მიიღოს შემდეგი სია [100,20,30,50,5323,3321,22,56,700,90,10]


# list_one= [100,20,30,50,5323,3321,22,56,700,90,10]

# def sum(list):
#     summary = 0
#     for i in range(len(list)):
#         summary += list[i]
#     return summary

# print(sum(list_one))


# დავალება 4.

# დაწერეთ ფუნქცია, რომელიც ატრიბუტად იღებს ლისტს, ფუნქციამ უნდა დააბრუნოს ახალი ლისტი,
# რომელშიც მოცემული იქნება მხოლოდ ის მნიშვნელობები, რომელიც უნიკალურია(მხოლოდ ერთხელაა გამოყენებული)
# ატრიბუტად გადმოცემულ ლისტში.

# int_list = [10, 20, 30, 40, 10]

# def return_single(list):
#     new_list = []
#     for i in range(len(list)):
#         if list.count(list[i]) == 1:
#             new_list.append(list[i])
#     return new_list

# print(return_single(int_list))


# დავალება 5.

# რეკურსიის გამოყენებით დაწერეთ პითონის ფუნქცია, რომელიც მიიღებს ერთ პარამეტრს number და
# დააბრუნებს ციფრების ჯამს (მაგალითად თუ ფუნქციამ მიიღო რიცხვი 12345, უნდა დააბრუნოს 15. რადგან
# 1+2+3+4+5 უდრის 15-ს )


# დავალება 6.

# რეკურსიის გამოყენებით დაწერეთ პითონის ფუნქცია, რომელიც მიიღებს პარამეტრად სტრიქონს და
# დააბრუნებს მის შებრუნებულ (revers) სტრიქონს ( მაგალითად input:Hello Output: olleH)

# def turn_reverse(string):
#     if len(string) == 1:
#         return string
#     else:
#         return string[-1] + turn_reverse(string[0:-1])


# string_one = "dato"
# print(turn_reverse(string_one))

# დავალება 7.

# რეკურსიის გამოყენებით დაწერეთ პითონის ფუნქცია, რომელიც პარამეტრად მიიღებს რიცხვს და
# დაგვიბრუნებს ფაქტორიალს ამ რიცხვის ჩათვლით.


# def factorial(number):

#     if number == 0:
#         return 1
#     return number*factorial(number-1)

# print(factorial(5))
